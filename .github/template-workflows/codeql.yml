name: CodeQL Analysis

on:
  push:
    branches: [ main, fork_upstream, fork_integration ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Mondays at 6 AM UTC
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  check-paths:
    name: Check if Code Changes Present
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.filter.outputs.should-run }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check for code changes
        id: filter
        run: |
          # For scheduled runs and workflow_dispatch, always run
          if [ "${{ github.event_name }}" = "schedule" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should-run=true" >> $GITHUB_OUTPUT
            echo "Running CodeQL: Scheduled or manual trigger"
            exit 0
          fi

          # For push events, check against previous commit
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE_SHA="${{ github.event.before }}"
            HEAD_SHA="${{ github.sha }}"
          # For pull requests, check against base branch
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            echo "should-run=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only $BASE_SHA $HEAD_SHA || echo "")

          if [ -z "$CHANGED_FILES" ]; then
            echo "should-run=true" >> $GITHUB_OUTPUT
            echo "Running CodeQL: Unable to determine changed files"
            exit 0
          fi

          # Check if any changed files are NOT in the ignore list
          SHOULD_RUN=false
          while IFS= read -r file; do
            # Skip if file matches ignore patterns
            if echo "$file" | grep -qE '^\.github/|^\.mvn/|^devops/|^docs/|^\.|\.md$'; then
              continue
            fi
            # Found a file that should trigger CodeQL
            SHOULD_RUN=true
            break
          done <<< "$CHANGED_FILES"

          if [ "$SHOULD_RUN" = "true" ]; then
            echo "should-run=true" >> $GITHUB_OUTPUT
            echo "Running CodeQL: Code changes detected"
          else
            echo "should-run=false" >> $GITHUB_OUTPUT
            echo "Skipping CodeQL: Only ignored paths changed (.github/, .mvn/, devops/, docs/, dotfiles, *.md)"
          fi

  detect-languages:
    needs: check-paths
    if: needs.check-paths.outputs.should-run == 'true'
    name: Detect Project Languages
    runs-on: ubuntu-latest
    outputs:
      languages: ${{ steps.detect.outputs.languages }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Detect languages
        id: detect
        run: |
          LANGUAGES='[]'

          # Check for Java (Maven or Gradle)
          if [ -f "pom.xml" ] || [ -f "build.gradle" ] || [ -f "build.gradle.kts" ]; then
            LANGUAGES=$(echo "$LANGUAGES" | jq -c '. + ["java-kotlin"]')
          fi

          # Check for Python
          if [ -f "setup.py" ] || [ -f "pyproject.toml" ] || [ -f "requirements.txt" ] || find . -name "*.py" -not -path "./.*" | grep -q .; then
            LANGUAGES=$(echo "$LANGUAGES" | jq -c '. + ["python"]')
          fi

          # Check for JavaScript/TypeScript
          if [ -f "package.json" ] || find . -name "*.js" -o -name "*.ts" -not -path "./node_modules/*" -not -path "./.*" | grep -q .; then
            LANGUAGES=$(echo "$LANGUAGES" | jq -c '. + ["javascript-typescript"]')
          fi

          # Check for Go
          if [ -f "go.mod" ] || find . -name "*.go" -not -path "./.*" | grep -q .; then
            LANGUAGES=$(echo "$LANGUAGES" | jq -c '. + ["go"]')
          fi

          # Default to java-kotlin if nothing detected (OSDU is primarily Java)
          if [ "$LANGUAGES" = "[]" ]; then
            LANGUAGES='["java-kotlin"]'
          fi

          echo "languages=$LANGUAGES" >> $GITHUB_OUTPUT
          echo "Detected languages: $LANGUAGES"

  analyze:
    name: Analyze Code
    needs: [check-paths, detect-languages]
    if: needs.check-paths.outputs.should-run == 'true' && needs.detect-languages.outputs.languages != '[]'
    runs-on: ubuntu-latest
    timeout-minutes: 360

    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJSON(needs.detect-languages.outputs.languages) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Java
        if: matrix.language == 'java-kotlin'
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Setup Python
        if: matrix.language == 'python'
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'

      - name: Setup Node.js
        if: matrix.language == 'javascript-typescript'
        uses: actions/setup-node@v6
        with:
          node-version: '18'
          cache: 'npm'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@caa5102941e77fe39b460490c70318beb68c5c25  # v4
        with:
          languages: ${{ matrix.language }}
          queries: security-extended
          build-mode: none

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@caa5102941e77fe39b460490c70318beb68c5c25  # v4
        with:
          category: "/language:${{matrix.language}}"